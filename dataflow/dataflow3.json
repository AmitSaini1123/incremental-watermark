{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceTable",
						"type": "DatasetReference"
					},
					"name": "SourceTable"
				},
				{
					"dataset": {
						"referenceName": "DestinationTable",
						"type": "DatasetReference"
					},
					"name": "DestinationTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestinationTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DestinationTable",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "sourceHash"
				},
				{
					"name": "TargetHash"
				},
				{
					"name": "ExisitingData"
				},
				{
					"name": "exists1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "alterRow2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          City as string,",
				"          Start_Date as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceTable",
				"source(output(",
				"          ID as integer,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          City as string,",
				"          Start_Date as date,",
				"          End_date as date,",
				"          Active_flag as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DestinationTable",
				"SourceTable derive(SourceHash = md5(First_Name,Last_Name,City)) ~> sourceHash",
				"DestinationTable derive(TargetHash = md5(First_Name,Last_Name,City)) ~> TargetHash",
				"sourceHash, TargetHash exists(SourceHash == TargetHash,",
				"     negate:true,",
				"     broadcast: 'auto')~> ExisitingData",
				"TargetHash, sourceHash exists(DestinationTable@ID == SourceTable@ID",
				"     && DestinationTable@First_Name == SourceTable@First_Name,",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"ExisitingData derive(End_date = toDate('10-10-2022'),",
				"          Active_flag = 1) ~> derivedColumn1",
				"exists1 derive(End_date = toDate(currentUTC()),",
				"          Active_flag = 0) ~> derivedColumn2",
				"derivedColumn2 alterRow(updateIf(true())) ~> alterRow2",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Surrogate_key as integer,",
				"          ID as integer,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          City as string,",
				"          Start_Date as date,",
				"          End_date as date,",
				"          Active_flag as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID,",
				"          First_Name,",
				"          Last_Name,",
				"          City,",
				"          Start_Date,",
				"          End_date,",
				"          Active_flag",
				"     )) ~> sink1",
				"alterRow2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Surrogate_key as integer,",
				"          ID as integer,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          City as string,",
				"          Start_Date as date,",
				"          End_date as date,",
				"          Active_flag as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['ID','First_Name','City'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID,",
				"          First_Name,",
				"          Last_Name,",
				"          City,",
				"          Start_Date,",
				"          End_date,",
				"          Active_flag",
				"     )) ~> sink2"
			]
		}
	}
}